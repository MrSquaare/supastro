---
import { isInputError, actions } from "astro:actions";

const user = await Astro.callAction(actions.admin.user.get, {});

if (user.data) {
  return Astro.redirect("/admin");
}

const loginResult = Astro.getActionResult(actions.admin.auth.login);
const loginError = loginResult?.error;
const formError = isInputError(loginError) ? loginError : null;
---

<head>
  <title>Login - Admin</title>
  <meta name="viewport" content="width=device-width" />
</head>

<body>
  <div class="flex h-screen w-screen flex-col items-center justify-center">
    <h1 class="mb-4 text-center text-4xl">
      <span class="font-bold">Admin</span> - Login
    </h1>
    <div class="w-[350px]">
      {
        formError ? (
          <div class="relative mb-2 w-full rounded-base border-2 border-border bg-red-400 p-4 text-black">
            Please check the form
          </div>
        ) : loginError ? (
          <div class="relative mb-2 w-full rounded-base border-2 border-border bg-red-400 p-4 text-black">
            {loginError.code}: {loginError.message}
          </div>
        ) : null
      }
      <div
        class="rounded-base border-2 border-border bg-slate-300 p-4 text-black shadow-light"
      >
        <form method="post" action={"/admin" + actions.admin.auth.login}>
          <div class="mb-2 space-y-1.5">
            <label
              for="email"
              class="text-sm font-heading leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
            >
              Email
            </label>
            <input
              type="email"
              id="email"
              name="email"
              class="flex h-10 w-full rounded-base border-2 border-border bg-white px-3 py-2 text-sm font-base text-text ring-offset-white selection:bg-slate-300 selection:text-black file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
            />
            {formError?.fields.email ? <p>{formError.fields.email}</p> : null}
          </div>
          <div class="mb-2 space-y-1.5">
            <label
              for="password"
              class="text-sm font-heading leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
            >
              Password
            </label>
            <input
              type="password"
              id="password"
              name="password"
              class="flex h-10 w-full rounded-base border-2 border-border bg-white px-3 py-2 text-sm font-base text-text ring-offset-white selection:bg-slate-300 selection:text-black file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
            />
            {
              formError?.fields.password ? (
                <p>{formError.fields.password}</p>
              ) : null
            }
          </div>
          <div>
            <button
              type="submit"
              class="inline-flex w-full items-center justify-center whitespace-nowrap rounded-base border-2 border-border bg-white px-4 py-2 text-sm font-base text-text shadow-light ring-offset-white transition-all hover:translate-x-boxShadowX hover:translate-y-boxShadowY hover:shadow-none focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-black focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
            >
              Login
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</body>
